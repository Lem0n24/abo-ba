{"version":3,"sources":["prompInstall.js","constant/layout.js","containers/Home/Home.jsx","image/logowthname.png","containers/GroupSelect/GroupSelect.jsx","routes.js","components/App/App.jsx","components/Loader/Loader.jsx","components/ErrorBoundary/ErrorBoundary.jsx","components/BottomSheet/BottomSheet.jsx","components/Toolbar/Toolbar.jsx","serviceWorkerRegistration.js","index.js","utils/fateEffect.js"],"names":["PromptInstall","useEffect","PwaInstallPrompt","condition","expires","show_after","className","type","src","alt","viewBox","xmlns","fill","d","groupsJson","groups","lessonTime","weekDays","moment","weekdays","Home","navigator","id","params","useState","selectedGroup","setSelectedGroup","selectedDay","setSelectedDay","weekParams","useMemo","weekNumber","week","weekIsOdd","onBack","page","getRoute","replacePage","find","group","findGroup","modifier","renderToolbar","title","name","day","format","lessons","map","lesson","odd","num","split","even","renderLesson","Option","Select","GroupSelect","setGroups","selectedGroupId","setSelectedGroupId","savedData","JSON","parse","localStorage","getItem","setTimeout","renderFixed","logowthname","showSearch","onSearch","event","console","log","placeholder","onChange","groupId","setItem","stringify","filterOption","input","option","children","toLowerCase","indexOf","value","onClick","disabled","color","ROUTES","home","component","key","groupSelect","uniqKey","v1","initRoute","App","navigatorEl","useRef","ref","renderPage","route","initialRoute","animation","useStyles","makeStyles","root","position","display","bottom","opacity","top","animationDuration","left","circle","strokeLinecap","Loader","size","classes","CircularProgress","variant","thickness","disableShrink","style","ErrorBoundary","props","state","hasError","error","info","this","setState","menu","document","getElementsByClassName","remove","role","aria-label","Component","window","innerHeight","Toolbar","removeItem","locale","date","dateString","allowClear","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","addEventListener","data","reload","register","then","registration","setInterval","update","res","timeoutUpdate","onupdatefound","installingWorker","installing","onstatechange","controller","ons","notification","confirm","buttonLabels","postMessage","onUpdate","onSuccess","catch","getElementById","disableAutoStyling","ready","render","element","classList","add","fateEffect","URL","process","href","origin","fetch","headers","response","contentType","get","status","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0eec1448.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport PwaInstallPrompt from 'pwa-install-prompt';\nimport 'pwa-install-prompt/style.css';\n\nconst PromptInstall = () => {\n  useEffect(() => {\n    new PwaInstallPrompt('.pwa-install-prompt__container', {\n      condition: null,\n      expires: 180,\n      show_after: 90,\n    });\n  }, []);\n\n  return (\n    <div className=\"pwa-install-prompt__container\">\n      <button className=\"pwa-install-prompt__overlay\" type=\"button\">\n        Close\n      </button>\n      <div className=\"pwa-install-prompt\">\n        <div className=\"pwa-install-prompt__icon__container\">\n          <img\n            className=\"pwa-install-prompt__icon\"\n            src=\"apple-touch-icon.png\"\n            alt=\"Установите на домашний экран\"\n          />\n        </div>\n        <div className=\"pwa-install-prompt__content\">\n          <h3 className=\"pwa-install-prompt__title\">Установка</h3>\n          <p className=\"pwa-install-prompt__text\">\n            Установите приложение на домашний экран для быстрого и удобного доступа к своим данным\n          </p>\n          <p className=\"pwa-install-prompt__guide\">\n            <span>Нажмите</span>\n            <svg className=\"pwa-install-prompt__guide__icon\" viewBox=\"0 0 128 128\" xmlns=\"http://www.w3.org/2000/svg\">\n              <title>Поделиться</title>\n              <path\n                fill=\"#007AFF\"\n                d=\"M48.883,22.992L61.146,10.677L61.146,78.282C61.146,80.005 62.285,81.149 64,81.149C65.715,81.149 66.854,80.005 66.854,78.282L66.854,10.677L79.117,22.992C79.693,23.57 80.256,23.853 81.114,23.853C81.971,23.853 82.534,23.57 83.11,22.992C84.25,21.848 84.25,20.125 83.11,18.981L65.997,1.794C65.715,1.511 65.421,1.215 65.139,1.215C64.563,0.932 63.718,0.932 62.861,1.215C62.579,1.498 62.285,1.498 62.003,1.794L44.89,18.981C43.75,20.125 43.75,21.848 44.89,22.992C46.029,24.149 47.744,24.149 48.883,22.992ZM103.936,35.32L81.114,35.32L81.114,41.053L103.936,41.053L103.936,121.27L24.064,121.27L24.064,41.053L46.886,41.053L46.886,35.32L24.064,35.32C20.928,35.32 18.355,37.904 18.355,41.053L18.355,121.27C18.355,124.419 20.928,127.003 24.064,127.003L103.936,127.003C107.072,127.003 109.645,124.419 109.645,121.27L109.645,41.053C109.645,37.891 107.072,35.32 103.936,35.32Z\"\n              />\n            </svg>\n          </p>\n          <p className=\"pwa-install-prompt__guide\">и добавить на экран &quot;Домой&quot;</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PromptInstall;\n","import g from '../groups.json';\r\n\r\nexport const groupsJson = g.groups;\r\n\r\nexport const lessonTime = [\r\n  '9:00, 10:35',\r\n  '10:45, 12:20',\r\n  '13:00, 14:35',\r\n  '14:45, 16:20',\r\n  '16:30, 18:05',\r\n  '18:15, 19:50',\r\n];","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { Button, Buuton, Page } from 'react-onsenui';\r\nimport moment from 'moment';\r\n\r\n\r\nimport { Loader, Toolbar } from 'components';\r\nimport { groupsJson, lessonTime } from 'constant';\r\nimport { getRoute } from 'routes';\r\n\r\nconst weekDays = moment.weekdays();\r\n\r\nconst Home = ({ navigator, params }) => {\r\n  const { id } = params;\r\n\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const [selectedDay, setSelectedDay] = useState(moment());\r\n\r\n  const weekParams = useMemo(() => {\r\n    const weekNumber = selectedDay.week();\r\n    const weekIsOdd = weekNumber % 2 === 1;\r\n\r\n    return { weekNumber, weekIsOdd }\r\n  }, [selectedDay]);\r\n\r\n  const onBack = () => {\r\n    const page = getRoute('groupSelect');\r\n\r\n    navigator.replacePage(page);\r\n  };\r\n\r\n  const findGroup = () => {\r\n    const find = groupsJson.find((group) => group.id === id);\r\n\r\n    setSelectedGroup(find);\r\n  };\r\n\r\n  useEffect(() => {\r\n    findGroup();\r\n  }, []);\r\n\r\n  const renderLesson = (lesson) => {\r\n    const isExist = !!lesson.odd\r\n\r\n    if (!isExist) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <div className=\"page-home__lessons_item\">\r\n        <div className=\"lesson-time\">\r\n          {lessonTime[lesson.num - 1].split(',')[0]}\r\n          <br />\r\n          {lessonTime[lesson.num - 1].split(',')[1]}\r\n        </div>\r\n\r\n        <div className=\"lesson-name\">\r\n          <div className=\"name\">\r\n            {\r\n              weekParams.weekIsOdd\r\n                ? lesson.odd[0]\r\n                : lesson.even[0]\r\n            }\r\n          </div>\r\n          <div className=\"audit\">\r\n            {\r\n              weekParams.weekIsOdd\r\n                ? lesson.odd[1]\r\n                : lesson.even[1]\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      modifier=\"home\"\r\n      renderToolbar={() => (\r\n        <Toolbar\r\n          onBack={onBack}\r\n          title={selectedGroup?.name ?? 'Группа'}\r\n          weekIsOdd={weekParams.weekIsOdd}\r\n          setSelectedDay={setSelectedDay}\r\n          selectedDay={selectedDay}\r\n        />\r\n      )}\r\n    >\r\n      {\r\n        !selectedGroup ? (\r\n          <div>\r\n            <Loader />\r\n          </div>\r\n        ) : (\r\n          <div className=\"page-home\">\r\n            <div className=\"page-home__title\">\r\n              {`${weekDays[selectedDay.day()]} / ${selectedDay.format('DD.MM')}`}\r\n            </div>\r\n            <div className=\"page-home__lessons\">\r\n              {\r\n                selectedGroup.lessons[selectedDay.day() - 1].map((lesson) => (\r\n                  renderLesson(lesson)\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/logowthname.f7ce1672.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Page, Button } from 'react-onsenui';\r\nimport { Select } from 'antd';\r\n\r\nimport logowthname from 'image/logowthname.png';\r\n\r\nimport { Toolbar, Loader } from 'components';\r\nimport { groupsJson } from 'constant';\r\nimport { getRoute } from 'routes';\r\n\r\nconst { Option } = Select;\r\n\r\nconst GroupSelect = ({ navigator }) => {\r\n  const [groups, setGroups] = useState(null);\r\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\r\n\r\n  const onBack = () => {\r\n    navigator.popPage();\r\n  };\r\n\r\n  const onHome = () => {\r\n    const page = getRoute('home', { id: selectedGroupId });\r\n\r\n    navigator.replacePage(page);\r\n  };\r\n\r\n  const onChangeHandler = (groupId) => {\r\n    setSelectedGroupId(groupId);\r\n\r\n    localStorage.setItem('savedGroup', JSON.stringify({ id: groupId }))\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedData = JSON.parse(localStorage.getItem('savedGroup'));\r\n\r\n    setTimeout(() => {\r\n      if (savedData) {\r\n        const page = getRoute('home', { id: savedData.id });\r\n\r\n        navigator.replacePage(page);\r\n      } else {\r\n        setGroups(groupsJson);\r\n      }\r\n    }, 500);\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n      modifier=\"group-select\"\r\n      renderFixed={() => {\r\n        if (!groups) {\r\n          return null;\r\n        }\r\n\r\n        return (\r\n          <div className=\"page-group-select__upload-container\">\r\n            <div className=\"page-group-select__upload-container_btn\">\r\n              <Button modifier=\"button-main-node\">\r\n                Загрузить расписание\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    >\r\n\r\n      <div className=\"page-group-select\">\r\n        <div className=\"page-group-select__logo_container\">\r\n          <img src={logowthname} className=\"page-group-select__logo\" />\r\n        </div>\r\n        {\r\n          !groups ? (\r\n            <div className=\"page-group-select__loader\">\r\n              <Loader color=\"#fff\" />\r\n            </div>\r\n          ) : (\r\n            <div className=\"page-group-select__content\">\r\n              <div className=\"page-group-select__title\">\r\n                Выберите группу\r\n              </div>\r\n\r\n              <div className=\"page-group-select__select-container\">\r\n                <Select\r\n                  showSearch\r\n                  onSearch={(event) => console.log(event)}\r\n                  placeholder=\"Выбрать группу\"\r\n                  className=\"page-group-select__select-container_select\"\r\n                  onChange={onChangeHandler}\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                  }\r\n                >\r\n                  {\r\n                    groups.map((group) => (\r\n                      <Option value={group.id}>\r\n                        {group.name}\r\n                      </Option>\r\n                    ))\r\n                  }\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"page-group-select__btn-show\">\r\n                <Button\r\n                  modifier=\"button-main-node\"\r\n                  onClick={onHome}\r\n                  disabled={!selectedGroupId}\r\n                >\r\n                  Показать расписание\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    </Page>\r\n  )\r\n};\r\n\r\nexport default GroupSelect;\r\n","import {\r\n  Home,\r\n  GroupSelect,\r\n} from 'containers';\r\n\r\nimport { v1 } from 'uuid';\r\n\r\nexport const initialRouteKey = 'groupSelect';\r\n\r\nexport const ROUTES = {\r\n  home: {\r\n    title: 'Расписание занятий',\r\n    component: Home,\r\n    key: 'home',\r\n  },\r\n  groupSelect: {\r\n    title: '',\r\n    component: GroupSelect,\r\n    key: 'groupSelect',\r\n  }\r\n};\r\n\r\nexport const getRoute = (key, params = {}) => (\r\n  { ...ROUTES[key], params, uniqKey: v1() }\r\n);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { Navigator } from 'react-onsenui';\r\n\r\nimport { ErrorBoundary } from 'components';\r\nimport { getRoute, initialRouteKey } from 'routes';\r\n\r\nimport 'styles';\r\n\r\nconst initRoute = getRoute(initialRouteKey);\r\n\r\nconst App = () => {\r\n  const navigatorEl = useRef(null);\r\n\r\n  const renderPage = (route, navigator) => {\r\n    return (\r\n      <ErrorBoundary key={route.uniqKey}>\r\n        <route.component navigator={navigator} params={route.params} />\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Navigator\r\n      ref={navigatorEl}\r\n      renderPage={renderPage}\r\n      initialRoute={initRoute}\r\n      animation=\"slide-ios\"\r\n    />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n  },\r\n  bottom: {\r\n    color: 'green',\r\n    opacity: 0.3,\r\n  },\r\n  top: {\r\n    color: 'green',\r\n    opacity: 0.9,\r\n    animationDuration: '450ms',\r\n    position: 'absolute',\r\n    left: 0,\r\n  },\r\n  circle: {\r\n    strokeLinecap: 'round',\r\n  },\r\n}));\r\n\r\nconst Loader = ({ size = 50, color = '#26CA42' }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        className={classes.bottom}\r\n        size={size}\r\n        thickness={4}\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        className={classes.top}\r\n        style={{ color }}\r\n        classes={{\r\n          circle: classes.circle,\r\n        }}\r\n        size={size}\r\n        thickness={4}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { Component, ErrorInfo } from 'react';\r\n\r\nimport './ErrorBoundary.less';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    console.log(error, info);\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { hasError } = this.state;\r\n\r\n    if (hasError) {\r\n      const menu = document.getElementsByClassName('navigation-menu')[0];\r\n\r\n      if (menu) {\r\n        menu.remove();\r\n      }\r\n\r\n      return (\r\n        <div className=\"error-boundary\">\r\n          <span className=\"error-boundary__icon\" role=\"img\" aria-label=\"Something wrong!\">\r\n            &#128561;\r\n          </span>\r\n          <h3 className=\"error-boundary__title\">Что-то пошло не так!</h3>\r\n          <h4 className=\"error-boundary__subtitle\">но мы уже над этим работаем</h4>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useRef } from 'react';\r\nimport { BottomSheet as RootBottomSheet } from 'react-spring-bottom-sheet';\r\nimport 'react-spring-bottom-sheet/dist/style.css';\r\n\r\n// interface IBottomSheetProps {\r\n//   isOpen: boolean,\r\n//   children: React.ReactNode,\r\n//   onClose?: () => void,\r\n//   blocking?: boolean\r\n//   toggleShow?: (arg1: (prev: boolean) => boolean) => void\r\n//   header?: React.ReactNode\r\n//   footer?: React.ReactNode\r\n//   snapPoints?: {\r\n//     max?: number\r\n//     min?: number\r\n//   }\r\n// }\r\n\r\nconst initState = {\r\n  max: window.innerHeight * 0.95,\r\n  min: window.innerHeight * 0.4,\r\n};\r\n\r\n/**\r\n * @default snapPoints = [window.innerHeight * 0.4, window.innerHeight * 0.95]\r\n */\r\nconst BottomSheet = (props) => {\r\n  const {\r\n    isOpen,\r\n    onClose = () => {},\r\n    children,\r\n    blocking = true,\r\n    snapPoints = initState,\r\n    toggleShow,\r\n    header,\r\n    footer,\r\n  } = props;\r\n\r\n  const ref = useRef(null);\r\n  const _snapPoints = {\r\n    min: snapPoints.min || initState.min,\r\n    max: snapPoints.max || initState.max,\r\n  };\r\n\r\n  const _toggleShow = (event) => {\r\n    if (!toggleShow) {\r\n      return;\r\n    }\r\n\r\n    const { type } = event;\r\n\r\n    if (type === 'SNAP') {\r\n      toggleShow((prev) => !prev);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootBottomSheet\r\n      open={isOpen}\r\n      onDismiss={onClose}\r\n      blocking={blocking}\r\n      snapPoints={() => [_snapPoints.min, _snapPoints.max]}\r\n      onSpringEnd={_toggleShow}\r\n      initialFocusRef={ref}\r\n      header={header}\r\n      footer={footer}\r\n    >\r\n      {children}\r\n    </RootBottomSheet>\r\n\r\n  );\r\n};\r\n\r\nexport default BottomSheet;\r\n","import React from 'react';\r\nimport { Toolbar as RootToolbar, Button } from 'react-onsenui';\r\nimport { DatePicker, ConfigProvider } from 'antd';\r\nimport moment from 'moment';\r\nimport locale from 'antd/lib/locale/ru_RU';\r\n\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onBack,\r\n    title,\r\n    weekIsOdd,\r\n    selectedDay,\r\n    setSelectedDay,\r\n  } = props;\r\n\r\n  const onChange = (date, dateString) => {\r\n    setSelectedDay(moment(dateString))\r\n  };\r\n\r\n  const _onBack = () => {\r\n    localStorage.removeItem('savedGroup');\r\n    onBack();\r\n  };\r\n\r\n  return (\r\n    <RootToolbar className=\"toolbar-container\">\r\n      <div className=\"toolbar-container__title\">\r\n          <Button onClick={_onBack} modifier=\"button-main-node__groupSelect\">\r\n            <div >\r\n              {title}\r\n            </div>\r\n\r\n            <div className=\"toolbar-container__title_week\">\r\n              {\r\n                weekIsOdd\r\n                ? 'нечетная неделя'\r\n                : 'четная неделя'\r\n              }\r\n            </div>\r\n          </Button>\r\n        <div className=\"toolbar-container__calendar\">\r\n          <ConfigProvider locale={locale}>\r\n            <DatePicker\r\n              onChange={onChange}\r\n              allowClear={false}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n      </div>\r\n    </RootToolbar>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import ons from 'onsenui'\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n// When the user asks to refresh the UI, we'll need to reload the window\nnavigator.serviceWorker.addEventListener('message', event => {\n  if (!event.data) {\n    return\n  }\n    switch (event.data) {\n      case 'reload-window':\n        window.location.reload()\n         break\n      \n    default:\n      // NOOP\n       break\n    }\n  })\n\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      //autoupdate PWA\n      setInterval(() => {\n        registration.update().then(res => console.info('FORCE UPDATE - resolve'))\n      }, config.timeoutUpdate)      \n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              ons.notification\n                .confirm(`Доступна новая версия приложения.`, {\n                  title: 'Обновление приложения',\n                  buttonLabels: ['Отмена', 'Обновить'],\n                })\n                .then(res => {\n                  if (res === 1) {\n                    installingWorker.postMessage({ type: 'SKIP_WAITING' })\n                  }\n              });\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ons from 'onsenui'\r\nimport { render } from 'react-dom';\r\nimport PrompInstall from './prompInstall';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nimport {fateEffect} from 'utils/fateEffect'\r\n\r\nimport { App } from 'components'\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nmoment.locale('ru');\r\n\r\nconst root = document.getElementById('root');\r\n\r\nons.disableAutoStyling();\r\n\r\nons.ready(() => {\r\n  render(\r\n    <>\r\n      <App />\r\n      <PrompInstall />\r\n    </>,\r\n    root\r\n  );\r\n\r\n  fateEffect('root-loader')\r\n})\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register({timeoutUpdate: 10000 });\r\n","const fateEffect = (id )=> {\r\n  const element = document.getElementById('root-loader');\r\n\r\n  if (!element) {\r\n    return;\r\n  }\r\n\r\n  element.classList.add('loader-fade-effect');\r\n\r\n  setTimeout(() => {\r\n    element.remove();\r\n  }, 500);\r\n}\r\nexport {\r\n  fateEffect\r\n} "],"sourceRoot":""}